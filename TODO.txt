NOW:

 + Use varargs on Runtime_callMethod

 + Make imports un-import at end of file.

 + Make importer cache symbols

 + Setup runtime to use init methods in place of clones (like python)

 + Make Number:asString accept format

 + Check arguments on core .imp files

 + Make primes example stop at square route.

 + string methods

 + CLI module
 + tester module

 + Make control structures builtin?

 + Make address type

 + Make legit ':' operator.

 + Form iterator idioms

 + Add (implements x y) function for interface checking.

 + Fix hashmap.

 + Make regex module

 + Make Go-inspired defer

 + Make break and continue accept arguments to deal with
   nested loops.

 + Protect against circular prototype linkage.

 + Cap slot name sizes

 + Make number type handle infinite precision integers?, binary,
   and hex, as well as the existing double. Magic.

 + Make argument expansion/pass

 + Maybe make it so callMethod doesn't try underscore 

 + Use standardized hash algo for importer

 + Make set more method like 

 


MAJOR:

 + Design and implement standard library.

 + Consolidate memory using a hybrid free list instead of
   fragmented malloc calls all over the place. Capitalize
   on repeat object sizes.




MEDIUM:

 + Handle exception catch cleanups.
 
 + Replace slot system with legit accessor.

 + Prefix operators...

 + Implement macros

 + Generators

 + Object notation (maybe brackets and scrap macros?)

 + Make composition functions for objects 
     - &=: and in place (intersection)
     - |=: or in place (union)
     - 

 + Make clonable Runtime module for executing sub programs



MINOR:

 + Improve internal module code scanner. Use regex
   or something.




MAYBE:
 
 + Make carrots variable expansion operators.

 + Prototype multiplexing (multiple inheritance).




LATER:
  + Concurrency!!!