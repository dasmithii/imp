BIG:
 + Concurrency.
 + Exceptions.
 + REPL.
     - Print command output if not null.
     - Catch exceptions.
     - Cleanup after CTRL-C. As of now, every interupt leaks memory.
 + Errors.



OBJECT LITERALS:

 + Add optional final closure argument for initialization
   processes.



CONTROL STRUCTURES:
 
 + Repeat is 25% slower than while. Figure out how to 
   improve this.



DATA STRUCTURES:

 + Make subdirectory 'abstract' in 'core/container'. Define
   abstract structures. Make a few implementations of them.
 + Provide mechanism for creating control structures (which
   handle breaks and continues, etc).
 + Add support for break and continue calls in nested
   loops.



MODULES:

 + Functional programming.
 + Networking.
 + Regex.
 + Testing.



MISCELANEOUS:

 + Generators + yielding
 + Make importer cache symbols.
 + Make import a method.
 + Add Runtime_executeSourceInContextWithArguments.
 + Make imports un-import at end of file.
 + Make Number:asString accept format
 + Setup runtime to use init methods in place of clones (like python).
 + Make Go-inspired defer.
 + Protect against circular prototype linkage.



PARSER:
 + Make prefix operators work.



OPTIMIZATION:
 + Make libraries compile w/o debug symbols.
 + Make loops to re-use scopes
 + Use standardized hash algo for importer.



PROTOTYPAL PROGRAMMING:
 
 + Common ancestor methods.
 + Prototype multiplexing (multiple inheritance).
 + Make composition functions for objects 
   - &=: and in place (intersection)
   - |=: or in place (union) 



UNIMPORTANT:

 + Cap slot name sizes.
 + Make clonable Runtime module for executing sub programs.



MAYBE:

 + Make number type handle infinite precision integers?, binary,
   and hex, as well as the existing double. Magic.


