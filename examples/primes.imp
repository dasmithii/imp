#!/usr/bin/env imp


(import 'core/control' self)
(import 'core/io')
(import 'core/container/Vector')


(def max 100)
(io:writeLine 'Printing prime numbers below' max '...')
(io:writeLine 2)

(def primes (Vector:~))

(def check {
	(def n (@:at 0))
	(def nRoot (n:squareRoot))
	(def i 0)
	(while {i:< primes:size} {
		(def p (primes:at i))
		(if (nRoot:< p) {
			(break)
		})
		(def mp (n:% p))
		(if (mp:!) {
			(return 0)
		})
		(i:++)
	})
	(return 1)
})

(def i 3)
(while {i:< max} {
	(if (check i) {
		(primes:append (i:$))
		(io:writeLine i)
	})
	(i:+= 2)
})